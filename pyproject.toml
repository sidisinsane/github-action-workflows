[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "github-action-workflows"
dynamic = ["version"] # Version comes from Git tags
description = "GitHub action workflow demos"
readme = "README.md"
license = "MIT"
authors = [
  { name = "Dirk Sidney Jansen", email = "sidisinsane@users.noreply.github.com" },
]
requires-python = ">=3.12"
dependencies = ["pyyaml~=6.0.2"]

[project.urls]
Homepage = "https://github.com/sidisinsane/github-action-workflowss"
Documentation = "https://github.com/sidisinsane/github-action-workflows#readme"
Repository = "https://github.com/sidisinsane/github-action-workflows.git"
"Bug Tracker" = "https://github.com/sidisinsane/github-action-workflows/issues"

[project.optional-dependencies]
build = ["python-semantic-release~=10.3.1"]

docs = [
  "mkdocs~=1.6.1",
  "mkdocstrings[python]~=0.30.0",
  "mkdocs-gen-files~=0.5.0",
  "mkdocs-material~=9.6.18",
  "mkdocs-nav-weight~=0.2.0",
  "mkdocs-section-index~=0.3.10",
  "pymdown-extensions~=10.16.1",
  "sphinx~=8.2.3",
  "sphinx-favicon~=1.0.1",
]

dev = ["pre-commit~=4.3.0"]

[project.scripts]
github-action-workflows = "github_action_workflows:main"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build]
exclude = ["uv.lock", ".tool-versions", ".github", ".venv"]

[tool.hatch.build.targets.wheel]
packages = ["src/github_action_workflows"]

[tool.hatch.build.hooks.vcs]
version-file = "src/github_action_workflows/__version__.py"
version-scheme = "guess-next-dev"
local-scheme = "no-local-version"
fallback-version = "0.1.0"
template = '''"""Package version information.

Automatic version file generated by hatch-vcs. Do not change, do not track!
"""

from __future__ import annotations


__version__ = {version!r}
__version_tuple__ = {version_tuple!r}

'''

[tool.semantic_release]
build_command = """
  uv lock --upgrade-package "$PACKAGE_NAME"
  uv build
"""
commit_message = "chore(release): {version}"
commit_author = "semantic-release <semantic-release>"
commit_parser = "conventional"
tag_format = "{version}"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease = false

[tool.semantic_release.changelog]
mode = "update"
insertion_flag = "<!-- version list -->"
exclude_commit_patterns = [
  '''chore(?:\([^)]*?\))?: .+''',
  '''ci(?:\([^)]*?\))?: .+''',
  '''refactor(?:\([^)]*?\))?: .+''',
  '''style(?:\([^)]*?\))?: .+''',
  '''test(?:\([^)]*?\))?: .+''',
  '''build\((?!deps\): .+)''',
  '''Initial [Cc]ommit.*''',
  '''First [Cc]ommit.*''',
]

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
other_allowed_tags = [
  "build",
  "chore",
  "ci",
  "docs",
  "release",
  "refactor",
  "style",
  "test",
]
allowed_tags = [
  "feat",
  "fix",
  "perf",
  "build",
  "chore",
  "ci",
  "docs",
  "release",
  "refactor",
  "style",
  "test",
]
default_bump_level = 0
parse_squash_commits = true
ignore_merge_commits = true

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
